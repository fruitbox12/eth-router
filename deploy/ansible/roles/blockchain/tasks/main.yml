---
# geth time!
- name: Add go-ethereum PPA
  apt_repository:
    #repo: deb http://ppa.launchpad.net/ethereum/ethereum/ubuntu artful main
    repo: ppa:ethereum/ethereum
    state: present
    filename: go-ethereum

- name: Install ethereum package
  apt:
    pkg: ethereum
    state: present
    update_cache: true
   
- name: Install Parity package
  apt:
    deb: "https://releases.parity.io/v{{ parity_version }}/x86_64-unknown-linux-gnu/parity_{{ parity_version}}_ubuntu_amd64.deb"
    state: present
    update_cache: true

# TODO: put something here about creating the data directory if it is not present

# TODO: register a service and create a handler
 
- name: Install blockchain systemd services
  template:
    src: "{{ item.name }}.service"
    dest: /lib/systemd/system/{{ item.name }}.service
    owner: root
    group: root
    mode: 0644
  with_items: "{{ blockchain_apps }}"
  vars:
    - sport: "{{ item.sport }}"
    - ws_sport: "{{ item.ws_sport }}"
    - p2p: "{{ item.p2p }}"

- name: Start blockchain systemd services
  systemd: 
    daemon_reload: yes
    state: "{{ 'started' if item.enabled == true else 'stopped' }}"
    enabled: "{{ item.enabled }}"
    name: "{{ item.name }}.service"
  with_items: "{{ blockchain_apps }}"

# Reverse SSH tunnel time!

- name: Install SSH tunnel systemd service
  template:
    src: secure-tunnel@.service
    dest: /etc/systemd/system/secure-tunnel@.service
    owner: root
    group: root
    mode: 0644

- name: Install secure-tunnel defaults
  template:
    src: secure-tunnel-defaults
    dest: /etc/default/secure-tunnel@{{ item.name }}
    owner: root
    group: root
    mode: 0644
  with_items: "{{ ssh_tunnels }}"
  vars:
    - dport: "{{ item.dport }}"
    - sport: "{{ item.sport }}"
    - ssh_hostname: "{{ item.ssh_hostname }}"

- name: Install private key for tunnels
  copy:
    src: geth-http
    dest: /etc/ssh/{{ private_key_name }}
    owner: root
    group: root
    mode: 0600

- name: Start ssh tunnel systemd service
  systemd: 
    daemon_reload: yes
    state: started
    enabled: true
    name: secure-tunnel@{{ item.name }}.service
  with_items: "{{ ssh_tunnels }}"
