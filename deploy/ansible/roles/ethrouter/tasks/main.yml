---
- name: Copy public SSH key
  authorized_key:
    key: "{{ ssh_public_key }}"
    user: "ubuntu"

- name: Install Nginx
  apt: pkg=nginx state=present update_cache=true

- name: Copy configuration for Nginx proxy
  template: src=default.conf dest=/etc/nginx/conf.d/default.conf
  notify: Restart Nginx

- name: Install nodesource key
  apt_key:
    url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key

- name: Add nodesource repo
  apt_repository:
    repo: deb https://deb.nodesource.com/node_10.x xenial main
    state: present
    filename: nodesource

- name: Install node
  apt: pkg=nodejs state=present update_cache=true

- name: Add Yarn repo key
  apt_key:
    url: https://dl.yarnpkg.com/debian/pubkey.gpg

- name: Add Yarn repo
  apt_repository:
    repo: deb https://dl.yarnpkg.com/debian/ stable main
    state: present
    filename: yarn

- name: Install yarn
  apt: pkg=yarn state=present update_cache=true

- name: Install git
  apt: pkg=git state=present

- name: Deploy git repo
  git:
    repo: "{{ repo_uri }}"
    dest: "/home/ubuntu/proxy"
    force: yes
  become: yes
  become_user: "ubuntu"
  notify: Restart Proxy

- name: Copy tokens data
  copy:
    src: production.json
    dest: "/home/ubuntu/proxy/src/config/tokens/production.json"
    owner: "ubuntu"
    group: "ubuntu"
    mode: 0644

# only works with 2.6
- name: Install dependencies for proxy app
  yarn:
    path: "/home/ubuntu/proxy"
  become: yes
  become_user: "ubuntu"

- name: Install systemd unit for proxy
  template:
    src: proxy.service
    dest: /etc/systemd/system/proxy@.service
    owner: root
    group: root
    mode: 0644

- name: Enable systemd service for proxy
  systemd:
    daemon_reload: yes
    state: started
    enabled: true
    name: "proxy@{{ item }}.service"
  with_sequence: end=3009 start=3000
